name: '🚀 CI/CD Pipeline'

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/test-*.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/test-*.yml'
  workflow_dispatch:

env:
  IS_MAIN_BRANCH: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version:
    uses: framinosona/github_actions/.github/workflows/reusable-version.yml@main
    with:
      config-file: "./.config/version.json"
      output-txt: 'output/version/version.txt'
      output-json: 'output/version/version.json'
      output-props: 'output/version/version.props'
      show-summary: true

  build-documentation:
    name: '🏗️ Build Documentation'
    needs: [version]
    runs-on: ubuntu-latest
    outputs:
      should-deploy-docs: ${{ env.IS_MAIN_BRANCH == 'true' || env.FORCE_RELEASE == 'true' }}

    steps:
      - name: '📥 Checkout Repository'
        uses: actions/checkout@v5

      - name: '📚 Build Documentation'
        id: docfx
        uses: framinosona/github_actions/dotnet-docfx-build@main
        with:
          config: 'docfx.json'
          output: 'output/docs/site'
          show-summary: 'true'

      - name: '📤 Upload GitHub Pages Artifact'
        uses: actions/upload-pages-artifact@v4
        with:
          path: 'output/docs/site'

  deploy-pages:
    name: '🌐 Deploy to GitHub Pages'
    if: needs.build-documentation.outputs.should-deploy-docs == 'true'
    needs: [build-documentation]
    runs-on: ubuntu-latest

    steps:
      - name: '🌐 Deploy to GitHub Pages'
        id: deployment
        uses: actions/deploy-pages@v4

  tag:
    name: '🏷️ Tag Repository'
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - name: '📥 Checkout Repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: '🏷️ Create Git Tag'
        uses: framinosona/github_actions/git-tag@main
        with:
          tag: ${{ needs.version.outputs.version-full }}
          message: 'Release ${{ needs.version.outputs.version-full }}'
          prefix: 'v'
          fail-if-exists: 'true'
          show-summary: 'true'

  github-release:
    name: '🚀 Create GitHub Release'
    needs: [tag, version, deploy-pages]
    runs-on: ubuntu-latest

    steps:
      - name: '📥 Checkout Repository'
        uses: actions/checkout@v5

      - name: '🚀 Create GitHub Release'
        uses: framinosona/github_actions/github-release@main
        with:
          tag: ${{ needs.version.outputs.version-fortag }}
          title: 'Release ${{ needs.version.outputs.version-full }}'
          generate-notes: 'true'
          prerelease: ${{ needs.version.outputs.version-isprerelease }}
          show-summary: 'true'
